enum UserEnum {
  Male
  Female
}

enum UserRoleEnum {
  Admin
  User
}

type User {
  id: ID!
  taxId: String!
  name: String!
  email: String!
  password: String!
  birthdate: String!
  gender: UserEnum!
  role: UserRoleEnum!
}

type AuthUser {
  user: User!
  token: String!
}

input CreateUserPayload {
  name: String!
  email: String!
  password: String!
  taxId: String!
  birthdate: String!
  gender: UserEnum!
  role: UserRoleEnum!
}

input UpdateUserPayload {
  name: String
  email: String
  password: String
  taxId: String
  birthdate: String
  gender: UserEnum
  role: UserRoleEnum
}

type Query {
  user(id: ID!): User
  users: [User!]
}

type Mutation {
  createUser(user: CreateUserPayload!): AuthUser
  updateUser(user: UpdateUserPayload!, id: ID!): User
  deleteUser(id: ID!): Boolean
  login(email: String!, password: String!): AuthUser
}
