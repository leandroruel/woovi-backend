# Type: GraphQL Schema
# Description: Date scalar type is a custom scalar type that represents a date in the format "YYYY-MM-DD".
scalar Date

# Type: GraphQL Schema
# Description: @isLoggedin directive is a custom directive that checks if the user is logged in
directive @auth(requires: UserRoleEnum = Admin) on OBJECT | FIELD_DEFINITION

# Type: GraphQL Schema
# UserEnum is an enum type that represents a user gender
enum UserEnum {
  Male
  Female
}

# Type: GraphQL Schema
# UserRoleEnum is an enum type that represents a user role
enum UserRoleEnum {
  Admin
  User
}

# Type: GraphQL Schema
# User is an object type that represents a user
type User {
  id: ID!
  taxId: String!
  name: String!
  email: String!
  password: String!
  birthdate: String!
  gender: UserEnum!
  createdAt: Date!
  updatedAt: Date!
}

# AuthUser is an object type that represents a user with a token
type AuthUser {
  user: User!
  token: String!
}

input CreateUserPayload {
  name: String!
  email: String!
  password: String!
  taxId: String!
  birthdate: String!
  gender: UserEnum!
}

input UpdateUserPayload {
  name: String
  email: String
  password: String
  taxId: String
  birthdate: String
  gender: UserEnum
}

input LoginInput {
  email: String!
  password: String!
}

type Query {
  user(id: ID!): User
  users: [User!]
}

type Mutation {
  createUser(user: CreateUserPayload!): AuthUser 
  updateUser(user: UpdateUserPayload!, id: ID!): User @auth(requires: User)
  deleteUser(id: ID!): Boolean @auth(requires: Admin)
  login(input: LoginInput!): AuthUser
  logout: Boolean
}
